{"version":3,"sources":["components/SuccessBanner.tsx","api/workLogger.ts","components/EnterButton.tsx","components/ExitButton.tsx","components/SendLogButton.tsx","components/WorkLoggerMenu.tsx","components/App.tsx","index.tsx"],"names":["SuccessBanner","props","hideClass","mounted","bannerTypeClass","success","CSSTransition","in","timeout","classNames","className","role","axios","create","baseURL","EnterButton","handleClick","a","workLogger","post","dateString","Date","toString","trackLogRequest","message","onClick","ExitButton","put","SendLogButton","get","params","WorkLoggerMenu","src","process","alt","App","state","logStatus","setState","setTimeout","this","React","Component","ReactDOM","render","document","querySelector"],"mappings":"4SAsBeA,G,MAbO,SAACC,GACnB,IAAMC,EAAYD,EAAME,QAAU,WAAa,KACzCC,EAAkBH,EAAMI,QAAU,gBAAkB,eAE1D,OACI,kBAACC,EAAA,EAAD,CAAeC,GAAIN,EAAME,QAASK,QAAS,IAAMC,WAAW,QACxD,yBAAKC,UAAS,gBAAWN,EAAX,YAA8BF,GAAaS,KAAK,SAA9D,yB,+BCbGC,E,OAAAA,EAAMC,OAAO,CAAEC,QAAS,0CCyBxBC,EApBK,SAACd,GAEjB,IAAMe,EAAW,uCAAG,sBAAAC,EAAA,+EAENC,EAAWC,KAAK,OAAQ,CAC1BC,YAAY,IAAIC,MAAOC,aAHf,OAKZrB,EAAMsB,iBAAgB,GALV,+CAOO,kBAAhB,KAAIC,QACHvB,EAAMsB,iBAAgB,GAEtBtB,EAAMsB,iBAAgB,GAVd,wDAAH,qDAejB,OAAO,4BAAQb,UAAU,yBAAyBe,QAAST,GAApD,UCEIU,EAnBI,SAACzB,GAChB,IAAMe,EAAW,uCAAG,sBAAAC,EAAA,+EAENC,EAAWS,IAAI,OAAQ,CACzBP,YAAY,IAAIC,MAAOC,aAHf,OAKZrB,EAAMsB,iBAAgB,GALV,+CAOO,kBAAhB,KAAIC,QACHvB,EAAMsB,iBAAgB,GAEtBtB,EAAMsB,iBAAgB,GAVd,wDAAH,qDAejB,OAAO,4BAAQb,UAAU,yBAAyBe,QAAST,GAApD,SCKIY,EArBO,SAAC3B,GACnB,IAAMe,EAAW,uCAAG,sBAAAC,EAAA,+EAENC,EAAWW,IAAI,OAAQ,CACzBC,OAAQ,CACJV,YAAY,IAAIC,MAAOC,cAJnB,OAOZrB,EAAMsB,iBAAgB,GAPV,+CASO,kBAAhB,KAAIC,QACHvB,EAAMsB,iBAAgB,GAEtBtB,EAAMsB,iBAAgB,GAZd,wDAAH,qDAiBjB,OAAO,4BAAQb,UAAU,yBAAyBe,QAAST,GAApD,aCFIe,G,MAbQ,SAAC9B,GACpB,OACI,yBAAKS,UAAU,QACX,wBAAIA,UAAU,WACV,yBAAKA,UAAU,eAAesB,IAAG,UAAKC,GAAL,aAAwCC,IAAI,KADjF,gBAGA,kBAAC,EAAD,CAAaX,gBAAiBtB,EAAMsB,kBACpC,kBAAC,EAAD,CAAYA,gBAAiBtB,EAAMsB,kBACnC,kBAAC,EAAD,CAAeA,gBAAiBtB,EAAMsB,qBCSnCY,E,2MAjBXC,MAAQ,CAAEC,WAAW,EAAOhC,SAAS,G,EAErCkB,gBAAkB,SAAClB,GACf,EAAKiC,SAAS,CAAED,WAAW,EAAMhC,QAASA,IAC1CkC,YAAW,kBAAM,EAAKD,SAAS,CAAED,WAAW,MAAU,M,wEAItD,OACI,oCACI,kBAAC,EAAD,CAAelC,QAASqC,KAAKJ,MAAMC,UAAWhC,QAASmC,KAAKJ,MAAM/B,UAClE,kBAAC,EAAD,CAAgBkB,gBAAiBiB,KAAKjB,uB,GAZpCkB,IAAMC,WCLxBC,IAASC,OAAO,kBAAC,EAAD,MAAQC,SAASC,cAAc,Y","file":"static/js/main.91aee7ea.chunk.js","sourcesContent":["import React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport \"./SuccessBanner.scss\";\n\ntype Props = {\n    mounted: boolean,\n    success: boolean\n}\n\nconst SuccessBanner = (props: Props) => {\n    const hideClass = props.mounted ? \"movedown\" : null;\n    const bannerTypeClass = props.success ? \"alert-success\" : \"alert-danger\";\n\n    return (\n        <CSSTransition in={props.mounted} timeout={1000} classNames=\"fade\">\n            <div className={`alert ${bannerTypeClass} ${hideClass}`} role=\"alert\">\n                Logged Succesfuly!\n            </div>\n        </CSSTransition>\n    );\n}\n\nexport default SuccessBanner;","import axios from \"axios\";\n\nexport default axios.create({ baseURL: \"https://work-logger-app.herokuapp.com\" });","import React from \"react\";\nimport workLogger from \"../api/workLogger\";\n\ntype Props = {\n    trackLogRequest: (success: boolean) => void\n}\n\nconst EnterButton = (props: Props) => {\n\n    const handleClick = async () => {\n        try {\n            await workLogger.post(\"/log\", {\n                dateString: new Date().toString()\n            });\n            props.trackLogRequest(true);\n        } catch(err) {\n            if(err.message === \"Network Error\") {\n                props.trackLogRequest(true);\n            } else {\n                props.trackLogRequest(false);\n            }\n        }\n    }\n\n    return <button className=\"btn btn-primary button\" onClick={handleClick}>Enter</button>;\n}\n\nexport default EnterButton;","import React from \"react\";\nimport workLogger from \"../api/workLogger\";\n\ntype Props = {\n    trackLogRequest: (success: boolean) => void\n}\n\nconst ExitButton = (props: Props) => {\n    const handleClick = async () => {\n        try{\n            await workLogger.put(\"/log\", {\n                dateString: new Date().toString()\n            });\n            props.trackLogRequest(true);\n        } catch(err) {\n            if(err.message === \"Network Error\") {\n                props.trackLogRequest(true);\n            } else {\n                props.trackLogRequest(false);\n            }\n        }\n    }\n\n    return <button className=\"btn btn-primary button\" onClick={handleClick}>Exit</button>;\n}\n\nexport default ExitButton;","import React from \"react\";\nimport workLogger from \"../api/workLogger\";\n\ntype Props = {\n    trackLogRequest: (success: boolean) => void\n}\n\nconst SendLogButton = (props: Props) => {\n    const handleClick = async () => {\n        try {\n            await workLogger.get(\"/log\", {\n                params: {\n                    dateString: new Date().toString()\n                }\n            });\n            props.trackLogRequest(true);\n        } catch(err) {\n            if(err.message === \"Network Error\") {\n                props.trackLogRequest(true);\n            } else {\n                props.trackLogRequest(false);\n            }\n        }\n    }\n\n    return <button className=\"btn btn-primary button\" onClick={handleClick}>Send Log</button>;\n}\n\nexport default SendLogButton;","import React from \"react\";\nimport EnterButton from \"./EnterButton\";\nimport ExitButton from \"./ExitButton\";\nimport SendLogButton from \"./SendLogButton\";\nimport \"./WorkLoggerMenu.scss\";\n\ntype Props = {\n    trackLogRequest: (success: boolean) => void\n}\n\nconst WorkLoggerMenu = (props: Props) => {\n    return (\n        <div className=\"menu\">\n            <h1 className=\"heading\">\n                <img className=\"techsee-icon\" src={`${process.env.PUBLIC_URL}/icon.png`} alt=\"\"/> Work Logger\n            </h1>\n            <EnterButton trackLogRequest={props.trackLogRequest}/>\n            <ExitButton trackLogRequest={props.trackLogRequest}/>\n            <SendLogButton trackLogRequest={props.trackLogRequest}/>\n        </div>\n    );\n}\n\nexport default WorkLoggerMenu;","import React from \"react\";\nimport SuccessBanner from \"./SuccessBanner\";\nimport WorkLoggerMenu from \"./WorkLoggerMenu\";\n\ntype State = {\n    logStatus: boolean,\n    success: boolean\n}\n\nclass App extends React.Component<{}, State> {\n    state = { logStatus: false, success: true };\n\n    trackLogRequest = (success: boolean) => {\n        this.setState({ logStatus: true, success: success });\n        setTimeout(() => this.setState({ logStatus: false }), 3000);\n    }\n\n    render() {\n        return (\n            <>\n                <SuccessBanner mounted={this.state.logStatus} success={this.state.success}/>\n                <WorkLoggerMenu trackLogRequest={this.trackLogRequest}/>\n            </>\n        );\n    }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App/>, document.querySelector(\"#root\"));"],"sourceRoot":""}